# Compiler l'exécuteur de tests
add_cobol_executable(test_runner 
    ${CMAKE_CURRENT_SOURCE_DIR}/test_runner.cbl
)

# Ajouter les sous-répertoires de tests
add_subdirectory(utils)
add_subdirectory(modules)

# Créer un script d'exécution pour les tests
set(run_tests_script "${CMAKE_BINARY_DIR}/run_tests.sh")
file(WRITE ${run_tests_script} "#!/bin/bash\n\n")
file(APPEND ${run_tests_script} "# Répertoire de base\n")
file(APPEND ${run_tests_script} "BASE_DIR=$(dirname \"$0\")\n")
file(APPEND ${run_tests_script} "cd \"$BASE_DIR\"\n\n")
file(APPEND ${run_tests_script} "# Configuration de l'environnement\n")
file(APPEND ${run_tests_script} "export COB_LIBRARY_PATH=\"$BASE_DIR\"\n\n")
file(APPEND ${run_tests_script} "# Couleurs pour les messages\n")
file(APPEND ${run_tests_script} "GREEN='\\033[0;32m'\n")
file(APPEND ${run_tests_script} "RED='\\033[0;31m'\n")
file(APPEND ${run_tests_script} "YELLOW='\\033[1;33m'\n")
file(APPEND ${run_tests_script} "NC='\\033[0m' # No Color\n\n")
file(APPEND ${run_tests_script} "# Compteurs\n")
file(APPEND ${run_tests_script} "TOTAL_TESTS=0\n")
file(APPEND ${run_tests_script} "PASSED_TESTS=0\n")
file(APPEND ${run_tests_script} "FAILED_TESTS=0\n\n")
file(APPEND ${run_tests_script} "# Fonction pour exécuter un test\n")
file(APPEND ${run_tests_script} "run_test() {\n")
file(APPEND ${run_tests_script} "    local test_name=\"$1\"\n")
file(APPEND ${run_tests_script} "    local test_exe=\"$BASE_DIR/$test_name\"\n")
file(APPEND ${run_tests_script} "    \n")
file(APPEND ${run_tests_script} "    if [ ! -f \"$test_exe\" ]; then\n")
file(APPEND ${run_tests_script} "        echo -e \"${YELLOW}AVERTISSEMENT: Le test $test_name n'existe pas.${NC}\"\n")
file(APPEND ${run_tests_script} "        return\n")
file(APPEND ${run_tests_script} "    fi\n")
file(APPEND ${run_tests_script} "    \n")
file(APPEND ${run_tests_script} "    echo -e \"\\n${YELLOW}=== Exécution du test: $test_name ===${NC}\"\n")
file(APPEND ${run_tests_script} "    \"$test_exe\"\n")
file(APPEND ${run_tests_script} "    local result=$?\n")
file(APPEND ${run_tests_script} "    \n")
file(APPEND ${run_tests_script} "    TOTAL_TESTS=$((TOTAL_TESTS + 1))\n")
file(APPEND ${run_tests_script} "    \n")
file(APPEND ${run_tests_script} "    if [ $result -eq 0 ]; then\n")
file(APPEND ${run_tests_script} "        echo -e \"${GREEN}✓ Test $test_name réussi${NC}\"\n")
file(APPEND ${run_tests_script} "        PASSED_TESTS=$((PASSED_TESTS + 1))\n")
file(APPEND ${run_tests_script} "    else\n")
file(APPEND ${run_tests_script} "        echo -e \"${RED}✗ Test $test_name échoué (code de retour: $result)${NC}\"\n")
file(APPEND ${run_tests_script} "        FAILED_TESTS=$((FAILED_TESTS + 1))\n")
file(APPEND ${run_tests_script} "    fi\n")
file(APPEND ${run_tests_script} "}\n\n")
file(APPEND ${run_tests_script} "# Exécuter tous les tests\n")
file(APPEND ${run_tests_script} "echo -e \"${YELLOW}=== Début des tests unitaires ===${NC}\"\n\n")
file(APPEND ${run_tests_script} "run_test \"test_date_utils\"\n")
file(APPEND ${run_tests_script} "run_test \"test_string_utils\"\n")
file(APPEND ${run_tests_script} "run_test \"test_calculator\"\n")
file(APPEND ${run_tests_script} "run_test \"test_file_handler\"\n\n")
file(APPEND ${run_tests_script} "# Afficher le bilan\n")
file(APPEND ${run_tests_script} "echo -e \"\\n${YELLOW}=== Bilan des tests ===${NC}\"\n")
file(APPEND ${run_tests_script} "echo -e \"Tests exécutés: $TOTAL_TESTS\"\n")
file(APPEND ${run_tests_script} "echo -e \"Tests réussis: ${GREEN}$PASSED_TESTS${NC}\"\n")
file(APPEND ${run_tests_script} "echo -e \"Tests échoués: ${RED}$FAILED_TESTS${NC}\"\n\n")
file(APPEND ${run_tests_script} "# Définir le code de retour\n")
file(APPEND ${run_tests_script} "if [ $FAILED_TESTS -gt 0 ]; then\n")
file(APPEND ${run_tests_script} "    echo -e \"\\n${RED}ÉCHEC: Certains tests ont échoué.${NC}\"\n")
file(APPEND ${run_tests_script} "    exit 1\n")
file(APPEND ${run_tests_script} "else\n")
file(APPEND ${run_tests_script} "    echo -e \"\\n${GREEN}SUCCÈS: Tous les tests ont réussi.${NC}\"\n")
file(APPEND ${run_tests_script} "    exit 0\n")
file(APPEND ${run_tests_script} "fi\n")

# Rendre le script exécutable
execute_process(COMMAND chmod +x ${run_tests_script})

message(STATUS "Script d'exécution des tests créé: ${run_tests_script}")
